#!/bin/bash

cc=gcc
ld=ld
as=nasm

cflags="-c -m32 -nostdlib -fno-builtin -ffreestanding -fno-stack-protector -Wall -Wextra"
ldflags="-m elf_i386"
asflags="-f elf32"

builddir=build

c_srcs="kernel/main.c"
asm_srcs="kernel/boot.asm"
ld_script="kernel/link.ld"



function make_obj {
    echo $(echo $1 | sed -E "s/\.c|\.asm/.o/")
}

function make_obj_each {
    for src in $@
    do
        echo $(make_obj $src)
    done
}

function prepend_each {
    local prefix=$1
    shift 1
    for str in $@
    do
        echo ${prefix}${str}
    done
}


rm ${builddir}/* -r


for src in $c_srcs
do
    echo "cc ${src}"
    mkdir -p ${builddir}/$(dirname $src)
    $cc $cflags $src -o ${builddir}/$(make_obj $src)
done


for src in $asm_srcs
do
    echo "as ${src}"
    mkdir -p ${builddir}/$(dirname $src)
    $as $asflags $src -o ${builddir}/$(make_obj $src)
done

echo "ld ${builddir}/kernel/kernel.bin"
$ld $ldflags -T $ld_script -o ${builddir}/kernel/kernel.bin            \
    $(prepend_each ${builddir}/ $(make_obj_each $c_srcs $asm_srcs))


mkdir -p ${builddir}/iso/boot/grub
cp grub.cfg ${builddir}/iso/boot/grub
cp ${builddir}/kernel/kernel.bin ${builddir}/iso/boot
grub-mkrescue -o ${builddir}/os.iso ${builddir}/iso &> /dev/null

if [ $? -eq 0 ]; then
    echo "made iso: ${builddir}/os.iso"
else
    echo "failed to make iso"
fi
